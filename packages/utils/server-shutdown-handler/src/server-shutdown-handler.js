/**
 * Close Express Server for different signals/events
 */
export function handleServerShutdown(server) {
  // SIGINT = Ctrl + C
  process.on('SIGINT', () => {
    console.log('\nSIGINT signal received: closing server');
    server.close(() => {
      console.log('Server closed');
      process.exit(0);
    });
  });

  // SIGTERM = process termination (usually generated by Docker or Kubernetes)
  process.on('SIGTERM', () => {
    console.log('\nSIGTERM signal received: closing server');
    server.close(() => {
      console.log('Server closed');
      process.exit(0);
    });
  });

  process.on('uncaughtException', (err) => {
    console.error('Uncaught Exception:', err);
    server.close(() => {
      console.log('Server closed due to uncaught exception');
      process.exit(1);
    });
  });

  process.on('unhandledRejection', (reason, promise) => {
    console.error('Unhandled Rejection at:', promise, 'reason:', reason);
    server.close(() => {
      console.log('Server closed due to unhandled rejection');
      process.exit(1);
    });
  });
}
